From: Laurent Fousse <laurent@komite.net>
Date: Sat, 28 Apr 2012 13:11:03 -0700
Subject: Apply upstream patch09, fixing miscomputation in mpfr_gamma.

---
 PATCHES        |    1 +
 VERSION        |    2 +-
 src/gamma.c    |    2 +-
 src/mpfr.h     |    2 +-
 src/version.c  |    2 +-
 tests/tgamma.c |   31 +++++++++++++++++++++++++++++++
 6 files changed, 36 insertions(+), 4 deletions(-)

diff --git a/PATCHES b/PATCHES
index a181111..2844594 100644
--- a/PATCHES
+++ b/PATCHES
@@ -1,3 +1,4 @@
+gamma-underflow
 __gmp_const
 large-prec
 logging-varfmt
diff --git a/VERSION b/VERSION
index 92abd77..a09acdb 100644
--- a/VERSION
+++ b/VERSION
@@ -1 +1 @@
-3.1.0-p8
+3.1.0-p9
diff --git a/src/gamma.c b/src/gamma.c
index 1969764..18d662c 100644
--- a/src/gamma.c
+++ b/src/gamma.c
@@ -296,7 +296,7 @@ mpfr_gamma (mpfr_ptr gamma, mpfr_srcptr x, mpfr_rnd_t rnd_mode)
       /* we want an upper bound for x * [log(2-x)-1].
          since x < 0, we need a lower bound on log(2-x) */
       mpfr_ui_sub (xp, 2, x, MPFR_RNDD);
-      mpfr_log2 (xp, xp, MPFR_RNDD);
+      mpfr_log (xp, xp, MPFR_RNDD);
       mpfr_sub_ui (xp, xp, 1, MPFR_RNDD);
       mpfr_mul (xp, xp, x, MPFR_RNDU);
 
diff --git a/src/mpfr.h b/src/mpfr.h
index 0efb874..30be7a1 100644
--- a/src/mpfr.h
+++ b/src/mpfr.h
@@ -27,7 +27,7 @@ http://www.gnu.org/licenses/ or write to the Free Software Foundation, Inc.,
 #define MPFR_VERSION_MAJOR 3
 #define MPFR_VERSION_MINOR 1
 #define MPFR_VERSION_PATCHLEVEL 0
-#define MPFR_VERSION_STRING "3.1.0-p8"
+#define MPFR_VERSION_STRING "3.1.0-p9"
 
 /* Macros dealing with MPFR VERSION */
 #define MPFR_VERSION_NUM(a,b,c) (((a) << 16L) | ((b) << 8) | (c))
diff --git a/src/version.c b/src/version.c
index ba6baff..008dc39 100644
--- a/src/version.c
+++ b/src/version.c
@@ -25,5 +25,5 @@ http://www.gnu.org/licenses/ or write to the Free Software Foundation, Inc.,
 const char *
 mpfr_get_version (void)
 {
-  return "3.1.0-p8";
+  return "3.1.0-p9";
 }
diff --git a/tests/tgamma.c b/tests/tgamma.c
index 58ae43d..e57b4bc 100644
--- a/tests/tgamma.c
+++ b/tests/tgamma.c
@@ -478,6 +478,36 @@ test20100709 (void)
   mpfr_clear (x);
 }
 
+/* bug found by Giridhar Tammana */
+static void
+test20120426 (void)
+{
+  mpfr_t xa, xb;
+  int i;
+  mpfr_exp_t emin;
+
+  mpfr_init2 (xa, 53);
+  mpfr_init2 (xb, 53);
+  mpfr_set_d (xb, -168.5, MPFR_RNDN);
+  emin = mpfr_get_emin ();
+  mpfr_set_emin (-1073);
+  i = mpfr_gamma (xa, xb, MPFR_RNDN);
+  i = mpfr_subnormalize (xa, i, MPFR_RNDN); /* new ternary value */
+  mpfr_set_str (xb, "-9.5737343987585366746184749943e-304", 10, MPFR_RNDN);
+  if (!((i > 0) && (mpfr_cmp (xa, xb) == 0)))
+    {
+      printf ("Error in test20120426, i=%d\n", i);
+      printf ("expected ");
+      mpfr_print_binary (xb); putchar ('\n');
+      printf ("got      ");
+      mpfr_print_binary (xa); putchar ('\n');
+      exit (1);
+    }
+  mpfr_set_emin (emin);
+  mpfr_clear (xa);
+  mpfr_clear (xb);
+}
+
 static void
 exprange (void)
 {
@@ -821,6 +851,7 @@ main (int argc, char *argv[])
   gamma_integer ();
   test20071231 ();
   test20100709 ();
+  test20120426 ();
 
   data_check ("data/gamma", mpfr_gamma, "mpfr_gamma");
 
